# app/core/utils.py
import re
from datetime import datetime
from app.utils.utils_logging import log_debug


def is_valid_date(date_str: str) -> bool:
  """
  Ki·ªÉm tra xem chu·ªói ng√†y c√≥ h·ª£p l·ªá theo ƒë·ªãnh d·∫°ng YYYY-MM-DD hay kh√¥ng.
  """
  log_debug(f'üîç Ki·ªÉm tra ng√†y h·ª£p l·ªá: {date_str}', level='INFO')
  try:
    datetime.strptime(date_str, '%Y-%m-%d')
    log_debug(f'‚úÖ Ng√†y h·ª£p l·ªá: {date_str}', level='DEBUG')
    return True
  except ValueError:
    log_debug(f'‚ùå Ng√†y kh√¥ng h·ª£p l·ªá: {date_str}', level='WARNING')
    return False


def clean_text(text: str) -> str:
  """
  L√†m s·∫°ch chu·ªói vƒÉn b·∫£n OCR, ch·ªâ gi·ªØ l·∫°i k√Ω t·ª± ch·ªØ hoa, s·ªë, v√† k√Ω t·ª± ƒë·∫∑c bi·ªát '<'.
  """
  cleaned = re.sub(r'[^A-Z0-9< ]', '', text.upper()).strip()
  log_debug(f"üßπ L√†m s·∫°ch OCR: '{text}' -> '{cleaned}'", level='DEBUG')
  if not cleaned:
    log_debug(f"‚ö†Ô∏è K·∫øt qu·∫£ l√†m s·∫°ch OCR r·ªóng t·ª´ ƒë·∫ßu v√†o: '{text}'", level='WARNING')
  return cleaned
