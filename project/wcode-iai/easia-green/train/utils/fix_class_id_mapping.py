from pathlib import Path

# ‚úÖ Danh s√°ch nh√£n ƒë√∫ng sau khi lo·∫°i b·ªè c√°c nh√£n th·ª´a
correct_classes = [
  'fullname',
  'dob',
  'sex',
  'passportid',
  'passportid2',
  'nationality',
  'pob',
  'cmnd',
  'date_of_issue',
  'date_of_expiry',
  'place_of_issue',
  'mrz',
]


# üîç Load file classes.txt g·ªëc
with open('store/labels_yolo/classes.txt', encoding='utf-8') as f:
  old_classes = [line.strip() for line in f.readlines()]

# ‚úÖ T·∫°o √°nh x·∫° old_class_id ‚Üí new_class_id n·∫øu h·ª£p l·ªá
class_id_map = {old_id: correct_classes.index(name) for old_id, name in enumerate(old_classes) if name in correct_classes}

print('üìå √Ånh x·∫° class_id c≈© ‚Üí m·ªõi:', class_id_map)

# üìÇ Th∆∞ m·ª•c ch·ª©a c√°c file YOLO .txt c·∫ßn x·ª≠ l√Ω
label_folders = [Path('train/datasets/labels/train'), Path('train/datasets/labels/val')]

for folder in label_folders:
  for txt_path in folder.glob('*.txt'):
    new_lines = []
    with open(txt_path, 'r', encoding='utf-8') as f:
      for line in f:
        parts = line.strip().split()
        if not parts or not parts[0].isdigit():
          continue

        old_class_id = int(parts[0])

        # ‚úÖ B·ªè n·∫øu class_id v∆∞·ª£t gi·ªõi h·∫°n danh s√°ch c≈©
        if old_class_id >= len(old_classes):
          print(f'‚ö†Ô∏è B·ªè d√≤ng l·ªói: {txt_path.name} ‚Üí class_id={old_class_id} v∆∞·ª£t gi·ªõi h·∫°n')
          continue

        old_label = old_classes[old_class_id]

        # ‚úÖ B·ªè n·∫øu l√† nh√£n 'passport' (kh√¥ng c√≤n d√πng)
        if old_label == 'passport':
          print(f"‚ö†Ô∏è B·ªè nh√£n 'passport' trong {txt_path.name}")
          continue

        # ‚úÖ Ghi l·∫°i n·∫øu nh√£n h·ª£p l·ªá
        if old_class_id in class_id_map:
          new_class_id = class_id_map[old_class_id]
          parts[0] = str(new_class_id)
          new_lines.append(' '.join(parts))
        else:
          print(f'‚ö†Ô∏è B·ªè nh√£n kh√¥ng h·ª£p l·ªá: {old_label} trong {txt_path.name}')

    # ‚úÖ Ghi ƒë√® l·∫°i file
    with open(txt_path, 'w', encoding='utf-8') as f:
      if new_lines:
        f.write('\n'.join(new_lines) + '\n')
      else:
        f.write('')  # X√≥a n·ªôi dung n·∫øu kh√¥ng c√≤n nh√£n h·ª£p l·ªá

print("‚úÖ Ho√†n t·∫•t s·ª≠a class_id v√† lo·∫°i b·ªè nh√£n 'passport'")
# ‚úÖ Ghi l·∫°i danh s√°ch nh√£n m·ªõi v√†o file classes.txt
with open('store/labels_yolo/classes_new.txt', 'w', encoding='utf-8') as f:
  for class_name in correct_classes:
    f.write(class_name + '\n')
print('‚úÖ Ghi l·∫°i danh s√°ch nh√£n m·ªõi v√†o file classes_new.txt')
