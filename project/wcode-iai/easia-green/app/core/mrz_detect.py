# app/core/mrz_detect.py
# ∆Øu ti√™n d√πng YOLOv8 ƒë·ªÉ crop v√πng MRZ ch√≠nh x√°c
# N·∫øu kh√¥ng c√≥ model ho·∫∑c kh√¥ng detect ƒë∆∞·ª£c, s·∫Ω fallback sang PaddleOCR ƒë·ªÉ d√≤ text d√≤ng MRZ (kho·∫£ng 2 d√≤ng, ~44 k√Ω t·ª±)
# S·∫Ω ƒë∆∞·ª£c cache sau l·∫ßn ƒë·∫ßu ti√™n load
# T√°ch bi·ªát ph·∫ßn qu·∫£n l√Ω model kh·ªèi logic nh·∫≠n di·ªán MRZ
# Chu·∫©n h√≥a v√† d·ªÖ m·ªü r·ªông n·∫øu sau n√†y b·∫°n c√≥ nhi·ªÅu model h∆°n
import numpy as np
import cv2  # noqa: F401
from typing import Optional
# from ultralytics import YOLO
from app.models.utils import load_yolo_model
from app.utils.utils_logging import log_debug

# Load YOLO model qua layer models/utils
YOLO_MODEL_PATH = "app/models/yolov8_mrz.pt"
yolo_model = load_yolo_model(YOLO_MODEL_PATH)


def detect_mrz_region(image: np.ndarray, ocr_model=None) -> Optional[np.ndarray]:
  """
  Ph√°t hi·ªán v√πng MRZ t·ª´ ·∫£nh ƒë·∫ßu v√†o.
  N·∫øu c√≥ YOLO th√¨ d√πng YOLO, n·∫øu kh√¥ng th√¨ fallback b·∫±ng d√≤ d√≤ng OCR.
  Tr·∫£ v·ªÅ ·∫£nh ƒë√£ crop v√πng MRZ (n·∫øu t√¨m th·∫•y), ho·∫∑c None.
  """
  log_debug("üîç B·∫Øt ƒë·∫ßu d√≤ MRZ t·ª´ ·∫£nh...", level="INFO")

  if yolo_model:
    log_debug("ü§ñ S·ª≠ d·ª•ng YOLOv8 ƒë·ªÉ ph√°t hi·ªán v√πng MRZ...", level="DEBUG")
    results = yolo_model(image)
    for box in results[0].boxes:
      x1, y1, x2, y2 = box.xyxy[0].cpu().numpy().astype(int)
      conf = box.conf[0].item()
      log_debug(f"üì¶ YOLO ph√°t hi·ªán bbox: ({x1}, {y1}, {x2}, {y2}) - conf: {conf:.2f}", level="DEBUG")
      if conf > 0.5:
        return image[y1:y2, x1:x2]

  if ocr_model:
    log_debug("üß™ Fallback: S·ª≠ d·ª•ng PaddleOCR ƒë·ªÉ d√≤ d√≤ng MRZ...", level="DEBUG")
    ocr_result = ocr_model.ocr(image, cls=True)
    lines = [line[1][0] for line in ocr_result[0]]
    mrz_lines = [line for line in lines if len(line) >= 40 and set(line).issubset(set("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789<"))]
    log_debug(f"üìÑ Fallback MRZ lines: {len(mrz_lines)} d√≤ng kh·ªõp", level="DEBUG")
    if len(mrz_lines) >= 2:
      return image  # fallback: tr·∫£ nguy√™n ·∫£nh ƒë·ªÉ x·ª≠ l√Ω ti·∫øp

  log_debug("‚ö†Ô∏è Kh√¥ng ph√°t hi·ªán ƒë∆∞·ª£c MRZ b·∫±ng b·∫•t k·ª≥ ph∆∞∆°ng ph√°p n√†o.", level="WARNING")
  return None
